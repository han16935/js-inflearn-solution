1. 가능한 DVD 용량의 범위(1 2 3 4 5 6 7 8 9 기준)
   - 9 ~ 45
   - ? : 9인 이유는 입력된 곡 길이의 최댓값이 9이기 때문
          - 만약 8이라면 용량이 9인 노래 저장 불가

       : 45인 이유는 모든 곡을 한 번에 저장했을 때, 그 총합이 45이기 때문
          - 46 역시 전부 저장 가능하지만, 문제에서는 DVD의 길이를 최소로 하려 하기 때문에 46 이상은 의미 X


 2. 이분 검색 이용

      - answer = 0;
      - lt = 9
      - rt = 45
      - while(lt<rt){ // 이분 검색 조건
             let mid = Math.floor((lt + rt) / 2);
             if(count(arr, mid)<=m){
                 // 왜 ===m이 아닌, <=m인가?
                     - count 함수의 return 값은 mid 용량으로 곡을 저장했을 때,
                       저장할 수 있는 DVD 개수의 최솟값을 return 함
                       따라서, 만약 m 아래가 나올 경우 m 개수로도 저장 가능하기 때문
                           ex)
                             mid - 27, arr=[1 2 3 4 5 6 7 8 9] 일 경우
                                DVD 1 - 1 2 3 4 5 6 
                                DVD 2 - 7 8 9         즉, 이 경우 DVD 갯수의 최솟값은 2임
            
                             최솟값이 2라는 의미는, 3개의 DVD로도 저장 가능하다는 읨
                                  ex) DVD 1 - 1 2 3 4 5 6
                                       DVD 2 - 7 8             로도 저장 가능함
                                       DVD 3 - 9

              answer = mid // 현재 경우의 mid 값이 최솟값일 수 있기 때문 
              rt = mid - 1 // 더 나은 정답 위해 진행 
            }

           else lt = mid + 1 // 위 조건에 만족하지 못한다는 것은, 용량이 너무 작다는 뜻이므로 범위 변경
        } 

       function count(arr, capacity){
            let dvd = 1 // 가능한 DVD 최솟값 저장, 최소 1개의 DVD에는 저장 가능하므로 초깃값은 1로 지정
            let sum = 0 // 한 DVD에 저장된 용량
            for(let song of arr){
                  if(sum + song>capacity){ // 용량을 초과할 경우
                       sum = song; // 다음 DVD에는 다음 song을 저장해야 하므로
                       dvd++;
                  }

                 else sum+=song;
             }
            
                                            